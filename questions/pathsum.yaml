
title: Path Sum
tags:
- easy
- bst
- recursion
description: >-
  Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.
example: |
  Given the below binary tree and sum = 22,
          5
         / \
        4   8
       /   / \
      11  13  4
     /  \      \
    7    2      1
  return true, as there exists a root-to-leaf path 5->4->11->2 whose sum is 22.
explanation: >-
  Coming soon
solution: |
  ```python
  # Definition for a binary tree node.
  # class TreeNode:
  #     def __init__(self, x):
  #         self.val = x
  #         self.left = None
  #         self.right = None

  class Solution:
      def hasPathSum(self, root: TreeNode, sum: int) -> bool:
          if not root:
              return False
          if not (root.left or root.right) and sum == root.val:
              return True
          return self.hasPathSum(root.left, sum - root.val) or self.hasPathSum(root.right, sum - root.val)
  ```